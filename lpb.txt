package org.firstinspires.ftc.teamcode.Autonomy;

import com.acmerobotics.dashboard.config.Config;
import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorEx;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.util.ElapsedTime;

import java.util.ArrayList;
import java.util.concurrent.TimeUnit;

@Config
@Autonomous(name = "AutoLeftParkingBlue")
public class AutoLeftParkingBlue extends LinearOpMode {

    DcMotorEx mfl;
    DcMotorEx mfr;
    DcMotorEx mbl;
    DcMotorEx mbr;

    //cate milisecunde sa mearga spre stanga
    public static int milisecondsToParkLeftBlue = 10000;


   

    public void runOpMode() throws InterruptedException {
        //configuratia voastra 
        mfl = hardwareMap.get(DcMotorEx.class, "mfl");
        mfr = hardwareMap.get(DcMotorEx.class, "mfr");
        mbl = hardwareMap.get(DcMotorEx.class, "mbl");
        mbr = hardwareMap.get(DcMotorEx.class, "mbr");
        
        //dati reverse la ce trebuie

//        mfl.setDirection(DcMotorSimple.Direction.REVERSE);
//        mfr.setDirection(DcMotorSimple.Direction.REVERSE);
//        mbl.setDirection(DcMotorSimple.Direction.REVERSE);
//        mbr.setDirection(DcMotorSimple.Direction.REVERSE);

        ArrayList<DcMotorEx> motorListDrive = new ArrayList<>();
        motorListDrive.add(mfl);
        motorListDrive.add(mfr);
        motorListDrive.add(mbl);
        motorListDrive.add(mbr);

        for(DcMotorEx motor: motorListDrive) {
            motor.setMode(DcMotor.RunMode.RUN_WITHOUT_ENCODER);
            motor.setZeroPowerBehavior(DcMotor.ZeroPowerBehavior.BRAKE);
        }
        ElapsedTime timer = new ElapsedTime(ElapsedTime.Resolution.MILLISECONDS);

        waitForStart();
        timer.reset();
        while(opModeIsActive())
        {
            if(timer.time(TimeUnit.MILLISECONDS)<milisecondsToParkLeftBlue)
            {
                mfl.setPower(-0.5);
                mfr.setPower(0.5);
                mbl.setPower(0.5);
                mbr.setPower(-0.5);
            }
            else
            {
                mfl.setPower(0);
                mfr.setPower(0);
                mbl.setPower(0);
                mbr.setPower(0);

            }
        }
    }
}